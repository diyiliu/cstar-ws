group 'com.tiza'
version '1.0'

apply plugin: 'java'

sourceCompatibility = 1.8

repositories {
    mavenLocal()
    mavenCentral()
}

dependencies {
    compile fileTree(dir: 'lib', include: '*.jar')

    compile group: 'io.netty', name: 'netty-all', version: '4.1.11.Final'

    compile group: 'org.springframework', name: 'spring-core', version: '4.2.5.RELEASE'
    compile group: 'org.springframework', name: 'spring-context', version: '4.2.5.RELEASE'
    compile group: 'org.springframework', name: 'spring-context-support', version: '4.2.5.RELEASE'
    compile group: 'org.springframework', name: 'spring-jdbc', version: '4.2.5.RELEASE'

    compile group: 'org.quartz-scheduler', name: 'quartz', version: '2.2.1'

    compile group: 'org.apache.commons', name: 'commons-lang3', version: '3.5'
    compile group: 'commons-collections', name: 'commons-collections', version: '3.2.2'

    compile group: 'com.fasterxml.jackson.core', name: 'jackson-databind', version: '2.7.3'

    compile group: 'dom4j', name: 'dom4j', version: '1.6.1'
    compile group: 'jaxen', name: 'jaxen', version: '1.1.6'
    compile group: 'com.alibaba', name: 'druid', version: '1.0.18'
    compile group: 'org.apache.httpcomponents', name: 'httpclient', version: '4.5.2'
    compile group: 'ch.qos.logback', name: 'logback-classic', version: '1.1.6'

    // hadoop
    compile group: 'org.apache.hadoop', name: 'hadoop-common', version: '2.5.2'
    compile group: 'org.apache.hadoop', name: 'hadoop-hdfs', version: '2.5.2'
    // hbase
    compile group: 'org.apache.hbase', name: 'hbase-common', version: '0.98.12-hadoop2'
    compile group: 'org.apache.hbase', name: 'hbase-client', version: '0.98.12-hadoop2'
    // kafka
    compile group: 'org.apache.kafka', name: 'kafka-clients', version: '0.8.2.2'

    testCompile group: 'junit', name: 'junit', version: '4.12'
}

jar {
    manifest {
        attributes(
                'Main-Class': 'com.tiza.Main',
                'Class-Path': 'resources/ resources/config lib/' + configurations.compile.collect { it.name }.join(' lib/')
        )
    }

    // 过滤所有配置文件
    sourceSets {
        main {
            resources {
                exclude '*.*'
                exclude '**/'
            }
        }
    }

    /* '胖'打包（包含所有jar）
    from {
        configurations.compile.collect {
            it.isDirectory() ? it : zipTree(it)
        }
    }*/
}

// 拷贝文件
task copyJars(type: Copy) {
    from configurations.runtime
    into 'dist'
}

tasks.withType(JavaCompile) {
    options.encoding = "UTF-8"
}